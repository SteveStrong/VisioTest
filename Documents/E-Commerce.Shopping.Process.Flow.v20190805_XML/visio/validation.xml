<?xml version='1.0' encoding='utf-8' ?>
<Validation xmlns='http://schemas.microsoft.com/office/visio/2012/main' xmlns:r='http://schemas.openxmlformats.org/officeDocument/2006/relationships' xml:space='preserve'><ValidationProperties ShowIgnored='0'/><RuleSets><RuleSet ID='1' NameU='BPMN 2.0' Description='Verify a Visio BPMN diagram against the graphical aspects of the BPMN 2.0 standard.'><RuleSetFlags/><Rule ID='1' NameU='ImproperAssociation' Category='Association' Description='An Association must not connect Data Objects, Data Stores or Messages.'><RuleFilter>AND(HASCATEGORY("Connecting Object"),Actions.Association.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(3), "OR(HASCATEGORY(""Data Object""),HASCATEGORY(""Data Store""),HASCATEGORY(""Message""))") ) &lt;2</RuleTest></Rule><Rule ID='2' NameU='CancelOutsideOfTransaction' Category='Intermediate Events' Description='An Intermediate Cancel Event must be attached to the boundary of a Transaction.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Cancel.Checked, Actions.Intermediate.Checked)</RuleFilter><RuleTest>OR(AGGCOUNT(FILTERSET(OnBoundaryOf(),"Prop.BpmnIsATransaction")) &gt; 0,AGGCOUNT(FILTERSET(GLUEDSHAPES(5),"Prop.BpmnIsATransaction")) &gt; 0)</RuleTest></Rule><Rule ID='3' NameU='SequenceFlowCrossingPoolBoundary' Category='Sequence Flow' Description='Sequence Flow must not cross a Pool boundary.'><RuleFilter>AND(HASCATEGORY("Connecting Object"),Actions.SequenceFlow.Checked)</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""CFF List"")"))=0,AGGCOUNT(FILTERSET(GLUEDSHAPES(3), "AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""CFF List"""")""))&gt;0"))=0 , TRUE)</RuleTest></Rule><Rule ID='4' NameU='MessageFlowSamePool' Category='Message Flow' Description='Message Flow must not connect elements that are in the same Pool.'><RuleFilter>AND(HASCATEGORY("Connecting Object"),Actions.MessageFlow.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""CFF List"")"))=0</RuleTest></Rule><Rule ID='5' NameU='StartEventTarget' Category='Start Events' Description='A Start Event must not have incoming Sequence Flow unless it is on the boundary of an Expanded Sub-Process.'><RuleFilter>AND(HASCATEGORY("Event"),OR(Actions.Start.Checked, Actions.StartNonInterrupting.Checked))</RuleFilter><RuleTest>OR(AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.SequenceFlow.Checked"))=0,AGGCOUNT(FILTERSET(OnBoundaryOf(),"HASCATEGORY(""Expanded Sub-Process"")")) &gt; 0)</RuleTest></Rule><Rule ID='6' NameU='MissingEndEvent' Category='End Events' Description='If a Start Event is used in the top-level Process, then an End Event must also be used in the top-level Process.' RuleTarget='1'><RuleFilter>AGGCOUNT(FILTERSET(ThePage!SHAPESONPAGE(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))&gt;0</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(ThePage!SHAPESONPAGE(),"AND(Actions.End.Checked,AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))&gt;0</RuleTest></Rule><Rule ID='7' NameU='MissingEndEventInTask' Category='End Events' Description='If a Start Event is used in an Expanded Sub-Process, then an End Event must also be used in the Expanded Sub-Process.'><RuleFilter>HASCATEGORY("Expanded Sub-Process")</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=0, OR(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked), AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=1,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))=0, AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),Actions.End.Checked,AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=1,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))&gt;0),IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=1, OR(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked), AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=2,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))=0, AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),Actions.End.Checked,AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=2,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))&gt;0),IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=2, OR(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked), AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=3,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))=0, AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),Actions.End.Checked,AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=3,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))&gt;0), TRUE)))</RuleTest></Rule><Rule ID='8' NameU='MissingEndEventOnBoundary' Category='End Events' Description='If a Start Event is attached to an Expanded Sub-Process boundary, then an End Event must also be attached to the boundary.'><RuleFilter>HASCATEGORY("Expanded Sub-Process")</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=0, OR(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked), AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=1,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&gt;0)"))=0, AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),Actions.End.Checked,AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=1,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&gt;0)"))&gt;0),IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=1, OR(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked), AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=2,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&gt;0)"))=0, AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),Actions.End.Checked,AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=2,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&gt;0)"))&gt;0),IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=2, OR(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked), AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=3,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&gt;0)"))=0, AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),Actions.End.Checked,AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=3,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&gt;0)"))&gt;0), TRUE)))</RuleTest></Rule><Rule ID='9' NameU='MissingStartEvent' Category='Start Events' Description='If an End Event is used in the top-level Process, then at least one Start Event must also be used in the top-level Process.' RuleTarget='1'><RuleFilter>AGGCOUNT(FILTERSET(ThePage!SHAPESONPAGE(),"AND(HASCATEGORY(""Event""),Actions.End.Checked,AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))&gt;0</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(ThePage!SHAPESONPAGE(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))&gt;0</RuleTest></Rule><Rule ID='10' NameU='MissingStartEventInTask' Category='Start Events' Description='If an End Event is used in an Expanded Sub-Process, then a Start Event must also be used in the Expanded Sub-Process.'><RuleFilter>HASCATEGORY("Expanded Sub-Process")</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=0, OR(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),Actions.End.Checked, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=1,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))=0, AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=1,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))&gt;0),IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=1, OR(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),Actions.End.Checked, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=2,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))=0, AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=2,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))&gt;0),IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=2, OR(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),Actions.End.Checked, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=3,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))=0, AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=3,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))&gt;0), TRUE)))</RuleTest></Rule><Rule ID='11' NameU='MissingStartEventOnBoundary' Category='Start Events' Description='If an End Event is attached to an Expanded Sub-Process boundary, then an Start Event must also be attached to the boundary.'><RuleFilter>HASCATEGORY("Expanded Sub-Process")</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=0, OR(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),Actions.End.Checked, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=1,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&gt;0)"))=0, AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=1,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&gt;0)"))&gt;0),IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=1, OR(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),Actions.End.Checked, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=2,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&gt;0)"))=0, AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=2,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&gt;0)"))&gt;0),IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=2, OR(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),Actions.End.Checked, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=3,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&gt;0)"))=0, AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=3,AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&gt;0)"))&gt;0), TRUE)))</RuleTest></Rule><Rule ID='12' NameU='SequenceFlowCrossingSubProcessBoundary' Category='Sequence Flow' Description='Sequence Flow must not cross an Expanded Sub-Process boundary.'><RuleFilter>AND(HASCATEGORY("Connecting Object"),Actions.SequenceFlow.Checked)</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=0,AGGCOUNT(FILTERSET(GLUEDSHAPES(3), "AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))&lt;&gt;AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")""))"))=0 , IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=1,AGGCOUNT(FILTERSET(GLUEDSHAPES(3), "AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")"")) - AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")"")) &gt; 1"))=0 , IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=2,AGGCOUNT(FILTERSET(GLUEDSHAPES(3), "OR(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")"")) - AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")"")) &gt; 2, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")"")) - AGGCOUNT(FILTERSET(ONBOUNDARYOF(),""HASCATEGORY(""""Expanded Sub-Process"""")"")) = 0)"))=0 , TRUE)))</RuleTest></Rule><Rule ID='13' NameU='SequenceFlowFromGateways' Category='Gateways' Description='When Start and End Events are used, a Gateway must have outgoing Sequence Flow.'><RuleFilter>HASCATEGORY("Gateway")</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(2),"Actions.SequenceFlow.Checked"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=0, AGGCOUNT(FILTERSET(ThePage!SHAPESONPAGE(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked), AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=1, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(HASCATEGORY(""""Event""""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=1)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=2, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(HASCATEGORY(""""Event""""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=2)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=3, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(HASCATEGORY(""""Event""""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=3)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,TRUE)))),TRUE)</RuleTest></Rule><Rule ID='14' NameU='SequenceFlowToGateways' Category='Gateways' Description='When Start and End Events are used, a Gateway must have incoming Sequence Flow.'><RuleFilter>HASCATEGORY("Gateway")</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.SequenceFlow.Checked"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=0, AGGCOUNT(FILTERSET(ThePage!SHAPESONPAGE(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked), AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=1, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(HASCATEGORY(""""Event""""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=1)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=2, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(HASCATEGORY(""""Event""""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=2)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=3, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(HASCATEGORY(""""Event""""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=3)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,TRUE)))),TRUE)</RuleTest></Rule><Rule ID='15' NameU='SequenceFlowFromActivities' Category='Activities' Description='When Start and End Events are used, a Task or Collapsed Sub-Process must have outgoing Sequence Flow unless it is a Compensation Activity.'><RuleFilter>AND(NOT(Prop.BpmnIsForCompensation),NOT(HASCATEGORY("Expanded Sub-Process")))</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(2),"Actions.SequenceFlow.Checked"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=0, AGGCOUNT(FILTERSET(ThePage!SHAPESONPAGE(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked), AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=1, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(HASCATEGORY(""""Event""""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=1)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=2, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(HASCATEGORY(""""Event""""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=2)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=3, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(HASCATEGORY(""""Event""""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=3)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,TRUE)))),TRUE)</RuleTest></Rule><Rule ID='16' NameU='WrongNumberOfOutgoingSequenceFlows' Category='Intermediate Events' Description='An Intermediate Event must have exactly one outgoing Sequence Flow unless it has the Compensation Trigger/Result.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Intermediate.Checked,NOT(Actions.Compensation.Checked))</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(2), "Actions.SequenceFlow.Checked")) = 1</RuleTest></Rule><Rule ID='17' NameU='WrongNumberOfOutgoingSequenceFlows2' Category='Intermediate Events' Description='An Intermediate (Throwing) Event must have exactly one outgoing Sequence Flow unless it has the Link Trigger/Result.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.IntermediateThrowing.Checked,NOT(Actions.Link.Checked))</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(2), "Actions.SequenceFlow.Checked")) = 1</RuleTest></Rule><Rule ID='18' NameU='NoSequenceFlowFromStartEvent' Category='Start Events' Description='A Start Event must have outgoing Sequence Flow.'><RuleFilter>AND(HASCATEGORY("Event"),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked))</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(2),"Actions.SequenceFlow.Checked"))&gt;0</RuleTest></Rule><Rule ID='19' NameU='SequenceFlowToActivities' Category='Activities' Description='When Start and End Events are used, a Task or Collapsed Sub-Process must have incoming Sequence Flow unless it is a Compensation Activity.'><RuleFilter>AND(NOT(Prop.BpmnIsForCompensation), NOT(HASCATEGORY("Expanded Sub-Process")))</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.SequenceFlow.Checked"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=0, AGGCOUNT(FILTERSET(ThePage!SHAPESONPAGE(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked), AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=1, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(HASCATEGORY(""""Event""""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=1)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=2, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(HASCATEGORY(""""Event""""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=2)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=3, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(HASCATEGORY(""""Event""""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=3)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,TRUE)))),TRUE)</RuleTest></Rule><Rule ID='20' NameU='SequenceFlowToEvents' Category='Intermediate Events' Description='When Start and End Events are used, an Intermediate Event must have incoming Sequence Flow unless it is attached to the boundary of an Activity or has the Link Trigger/Result.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Intermediate.Checked,NOT(OR(Actions.Link.Checked,Actions.NoTriggerResult.Checked, Actions.Compensation.Checked,Actions.Error.Checked,Actions.Cancel.Checked)),AND(AGGCOUNT(FILTERSET(OnBoundaryOf(),"HASCATEGORY(""Expanded Sub-Process"")")) = 0, AGGCOUNT(FILTERSET(GLUEDSHAPES(5),"OR(HASCATEGORY(""Task""),HASCATEGORY(""Collapsed Sub-Process""))")) = 0))</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.SequenceFlow.Checked"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=0, AGGCOUNT(FILTERSET(ThePage!SHAPESONPAGE(),"AND(OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked), AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=1, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=1)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=2, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=2)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=3, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=3)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,TRUE)))),TRUE)</RuleTest></Rule><Rule ID='21' NameU='SequenceFlowToEvents2' Category='Intermediate Events' Description='When Start and End Events are used, an Intermediate (Throwing) Event must have incoming Sequence Flow.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.IntermediateThrowing.Checked, NOT(OR(Actions.NoTriggerResult.Checked, Actions.Compensation.Checked)))</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.SequenceFlow.Checked"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=0, AGGCOUNT(FILTERSET(ThePage!SHAPESONPAGE(),"AND(OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked), AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""HASCATEGORY(""""Expanded Sub-Process"""")""))=0)"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=1, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=1)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=2, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=2)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,IF(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))=3, AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(AGGCOUNT(FILTERSET(CONTAINERMEMBERS(),""AND(OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked),AGGCOUNT(FILTERSET(PARENTCONTAINERS(),""""HASCATEGORY(""""""""Expanded Sub-Process"""""""")""""))=3)""))&gt;0, HASCATEGORY(""Expanded Sub-Process""))"))=0,TRUE)))),TRUE)</RuleTest></Rule><Rule ID='22' NameU='NoSequenceFlowToEndEvent' Category='End Events' Description='An End Event must have incoming Sequence Flow.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.End.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.SequenceFlow.Checked"))&gt;0</RuleTest></Rule><Rule ID='23' NameU='WrongNumberOfIncomingSequenceFlowsIntermediateThrowing' Category='Intermediate Events' Description='An Intermediate (Throwing) Event with the None or Compensation Trigger/Result must have exactly one incoming Sequence Flow.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.IntermediateThrowing.Checked,OR(Actions.NoTriggerResult.Checked, Actions.Compensation.Checked))</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(1), "Actions.SequenceFlow.Checked")) = 1</RuleTest></Rule><Rule ID='24' NameU='WrongNumberOfIncomingSequenceFlowsIntermediate1' Category='Intermediate Events' Description='An Intermediate Compensation Event must have exactly one incoming Sequence Flow unless it is on the boundary of an Activity.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Intermediate.Checked,Actions.Compensation.Checked)</RuleFilter><RuleTest>IF(AND(AGGCOUNT(FILTERSET(OnBoundaryOf(),"HASCATEGORY(""Expanded Sub-Process"")"))=0,AGGCOUNT(FILTERSET(GLUEDSHAPES(5), "OR(HASCATEGORY(""Task""),HASCATEGORY(""Collapsed Sub-Process""))"))=0),AGGCOUNT(FILTERSET(GLUEDSHAPES(1), "Actions.SequenceFlow.Checked")) = 1, TRUE)</RuleTest></Rule><Rule ID='25' NameU='WrongNumberOfIncomingSequenceFlowsIntermediate2' Category='Intermediate Events' Description='An Intermediate Event with the None Trigger/Result must have exactly one incoming Sequence Flow.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Intermediate.Checked,Actions.NoTriggerResult.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(1), "Actions.SequenceFlow.Checked")) = 1</RuleTest></Rule><Rule ID='26' NameU='WrongNumberOfOutgoingSequenceFlows3' Category='Intermediate Events' Description='An Intermediate (Non-Interrupting) Event must have exactly one outgoing Sequence Flow.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.IntermediateNonInterrupting.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(2), "Actions.SequenceFlow.Checked")) = 1</RuleTest></Rule><Rule ID='27' NameU='CompensationOutgoingFlow' Category='Intermediate Events' Description='An Intermediate Compensation Event must not have outgoing Sequence Flow if it is on the boundary of an Activity.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Intermediate.Checked,Actions.Compensation.Checked)</RuleFilter><RuleTest>IF(OR(AGGCOUNT(FILTERSET(OnBoundaryOf(),"HASCATEGORY(""Expanded Sub-Process"")"))&gt;0,AGGCOUNT(FILTERSET(GLUEDSHAPES(5), "OR(HASCATEGORY(""Task""),HASCATEGORY(""Collapsed Sub-Process""))"))&gt;0),AGGCOUNT(FILTERSET(GLUEDSHAPES(2), "Actions.SequenceFlow.Checked")) = 0,TRUE)</RuleTest></Rule><Rule ID='28' NameU='SequenceFlowToBoundaryEvent' Category='Intermediate Events' Description='An Intermediate or Intermediate (Non-Interrupting) Event on an Activity boundary must not have incoming Sequence Flow.'><RuleFilter>AND(HASCATEGORY("Event"),OR(Actions.Intermediate.Checked,Actions.IntermediateNonInterrupting.Checked))</RuleFilter><RuleTest>IF(OR(AGGCOUNT(FILTERSET(OnBoundaryOf(),"HASCATEGORY(""Expanded Sub-Process"")"))&gt;0,AGGCOUNT(FILTERSET(GLUEDSHAPES(5), "OR(HASCATEGORY(""Task""),HASCATEGORY(""Collapsed Sub-Process""))"))&gt;0),AGGCOUNT(FILTERSET(GLUEDSHAPES(1), "Actions.SequenceFlow.Checked")) = 0,TRUE)</RuleTest></Rule><Rule ID='29' NameU='CancelButNoTransaction' Category='End Events' Description='An End Cancel Event must not occur outside a Transaction Expanded Sub-Process.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.End.Checked, Actions.Cancel.Checked)</RuleFilter><RuleTest>AND(AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(HASCATEGORY(""Expanded Sub-Process""),Prop.BpmnIsATransaction)"))&gt;0, AGGCOUNT(FILTERSET(OnBoundaryOf(),"AND(HASCATEGORY(""Expanded Sub-Process""),Prop.BpmnIsATransaction)"))=0)</RuleTest></Rule><Rule ID='30' NameU='SequenceFlowFromEndEvent' Category='End Events' Description='An End Event must not have outgoing Sequence Flow unless it is on the boundary of an Expanded Sub-Process.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.End.Checked)</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(2), "Actions.SequenceFlow.Checked"))&gt;0,OR(AGGCOUNT(FILTERSET(OnBoundaryOf(),"HASCATEGORY(""Expanded Sub-Process"")")) &gt; 0, AGGCOUNT(FILTERSET(GLUEDSHAPES(5),"HASCATEGORY(""Expanded Sub-Process"")")) &gt; 0), TRUE)</RuleTest></Rule><Rule ID='31' NameU='LinkOrNoneOnBoundary' Category='Intermediate Events' Description='An Intermediate Event attached to the boundary of an Activity must not have the None or Link Trigger/Result.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Intermediate.Checked,OR(Actions.NoTriggerResult.Checked, Actions.Link.Checked))</RuleFilter><RuleTest>AND(AGGCOUNT(FILTERSET(OnBoundaryOf(),"HASCATEGORY(""Expanded Sub-Process"")")) = 0,AGGCOUNT(FILTERSET(GLUEDSHAPES(5),"OR(HASCATEGORY(""Task""),HASCATEGORY(""Collapsed Sub-Process""))")) = 0)</RuleTest></Rule><Rule ID='32' NameU='LinkTargetAndSource' Category='Intermediate Events' Description='A Link Event must not have both incoming and outgoing Sequence Flow.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Link.Checked,OR(Actions.Intermediate.Checked, Actions.IntermediateThrowing.Checked))</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(1), "Actions.SequenceFlow.Checked")) &gt;0, AGGCOUNT(FILTERSET(GLUEDSHAPES(2), "Actions.SequenceFlow.Checked")) =0,TRUE)</RuleTest></Rule><Rule ID='33' NameU='ReceiveTaskOutgoingFlow' Category='Tasks' Description='A Receive Task must not have outgoing Message Flow.'><RuleFilter>AND(HASCATEGORY("Task"), Actions.Receive.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(2), "Actions.MessageFlow.Checked")) = 0</RuleTest></Rule><Rule ID='34' NameU='SendIncomingMessageFlow' Category='Tasks' Description='A Send Task must not have incoming Message Flow.'><RuleFilter>AND(HASCATEGORY("Task"), Actions.Send.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(1), "Actions.MessageFlow.Checked")) = 0</RuleTest></Rule><Rule ID='35' NameU='ScriptManualMessageFlow' Category='Tasks' Description='A Script or Manual Task must not have incoming or outgoing Message Flow.'><RuleFilter>AND(HASCATEGORY("Task"),OR(Actions.Script.Checked,STRSAME(Prop.BpmnTaskType,INDEX(7,Prop.BpmnTaskType.Format))))</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(0), "Actions.MessageFlow.Checked")) = 0</RuleTest></Rule><Rule ID='36' NameU='TooFewGates' Category='Gateways' Description='A Gateway with fewer than two incoming Sequence Flows must have at least two outgoing Sequence Flows.'><RuleFilter>HASCATEGORY("Gateway")</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.SequenceFlow.Checked"))  &lt; 2,AGGCOUNT(FILTERSET(GLUEDSHAPES(2), "Actions.SequenceFlow.Checked")) &gt;1,TRUE)</RuleTest></Rule><Rule ID='37' NameU='InconsistentGateIndicator' Category='Gateways' Description='A diagram should be consistent in the use of the "X" internal indicator on Exclusive Data Gateways.' RuleTarget='1'><RuleFilter>AGGCOUNT(FILTERSET(SHAPESONPAGE(),"AND(HASCATEGORY(""Gateway""),Actions.ExclusiveDataWithMarker.Checked)"))&gt;0</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(SHAPESONPAGE(),"AND(HASCATEGORY(""Gateway""), Actions.ExclusiveData.Checked)"))=0</RuleTest></Rule><Rule ID='38' NameU='InvalidGatewayTarget' Category='Gateways' Description='The outgoing Sequence Flow of an Exclusive Event Gateway must connect to a Receive Task or an Intermediate Event with the Message, Timer, or Signal Trigger/Result.'><RuleFilter>AND(HASCATEGORY("Connecting Object"),Actions.SequenceFlow.Checked)</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(4),"AND(HASCATEGORY(""Gateway""), Actions.ExclusiveEvent.Checked)"))&gt;0,OR(AGGCOUNT(FILTERSET(GLUEDSHAPES(5), "Actions.Receive.Checked"))&gt;0,AGGCOUNT(FILTERSET(GLUEDSHAPES(5),"AND(OR(Actions.Intermediate.Checked, Actions.IntermediateThrowing.Checked),OR(Actions.Message.Checked, Actions.Timer.Checked, Actions.Signal.Checked))"))&gt;0),TRUE)</RuleTest></Rule><Rule ID='39' NameU='InconsistentGatewayTargets' Category='Gateways' Description='An Exclusive Event Gateway must not have outgoing Sequence Flow to both Tasks and Intermediate Events with the Message Trigger/Result.'><RuleFilter>AND(HASCATEGORY("Gateway"), Actions.ExclusiveEvent.Checked)</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(CONNECTEDSHAPES(2), "HASCATEGORY(""Task"")"))&gt;0,AGGCOUNT(FILTERSET(CONNECTEDSHAPES(2),"AND(OR(Actions.Intermediate.Checked, Actions.IntermediateThrowing.Checked),Actions.Message.Checked)"))=0,TRUE)</RuleTest></Rule><Rule ID='40' NameU='OutgoingConditionalSequenceFlow' Category='Activities' Description='If an Activity has outgoing Conditional Sequence Flow, then it must have at least one other outgoing Sequence Flow.'><RuleFilter>OR(HASCATEGORY("Expanded Sub-Process"),HASCATEGORY("Task"),HASCATEGORY("Collapsed Sub-Process"))</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(2),"AND(Actions.SequenceFlow.Checked, Actions.ConditionExpression.Checked)")) &gt;0,AGGCOUNT(FILTERSET(GLUEDSHAPES(2), "Actions.SequenceFlow.Checked")) &gt;1,TRUE)</RuleTest></Rule><Rule ID='41' NameU='DataObjectNoAssociation' Category='Artifacts' Description='A Data Object or Data Store must be connected to at least one Association.'><RuleFilter>OR(HASCATEGORY("Data Object"),HASCATEGORY("Data Store"))</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(0),"Actions.Association.Checked"))&gt;0</RuleTest></Rule><Rule ID='42' NameU='ImproperAssociation2' Category='Association' Description='An Association must connect to a Data Object, Data Store, Message or Text Annotation, unless it connects a Compensation Event to a Compensation Activity.'><RuleFilter>AND(HASCATEGORY("Connecting Object"),Actions.Association.Checked)</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(3), "OR(HASCATEGORY(""Data Object""),HASCATEGORY(""Text Annotation""),HASCATEGORY(""Message""),HASCATEGORY(""Data Store""))"))=0, OR(AND(AGGCOUNT(FILTERSET(GLUEDSHAPES(4),"AND(HASCATEGORY(""Event""),Actions.Compensation.Checked)"))&gt;0,AGGCOUNT(FILTERSET(GLUEDSHAPES(5),"Prop.BpmnIsForCompensation"))&gt;0),AND(AGGCOUNT(FILTERSET(GLUEDSHAPES(5),"AND(HASCATEGORY(""Event""),Actions.Compensation.Checked)"))&gt;0,AGGCOUNT(FILTERSET(GLUEDSHAPES(4),"Prop.BpmnIsForCompensation"))&gt;0)),TRUE)</RuleTest></Rule><Rule ID='43' NameU='CompensationActivitySequenceFlow' Category='Activities' Description='A Compensation Activity must not have incoming or outgoing Sequence Flow.'><RuleFilter>Prop.BpmnIsForCompensation</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(0),"Actions.SequenceFlow.Checked"))=0</RuleTest></Rule><Rule ID='44' NameU='SameSourceAndTarget' Category='Sequence Flow, Message Flow' Description='The source and target must not be the same.'><RuleFilter>OR(Actions.MessageFlow.Checked, Actions.SequenceFlow.Checked)</RuleFilter><RuleTest>NOT(AND(AGGCOUNT(GLUEDSHAPES(3))=1,AGGCOUNT(GLUEDSHAPES(4))=1, AGGCOUNT(GLUEDSHAPES(5))=1))</RuleTest></Rule><Rule ID='45' NameU='NoTargetOrSource' Category='Sequence Flow, Message Flow' Description='The flow must have a source and target.'><RuleFilter>OR(Actions.MessageFlow.Checked, Actions.SequenceFlow.Checked)</RuleFilter><RuleTest>AND(AGGCOUNT(GLUEDSHAPES(4))=1,AGGCOUNT(GLUEDSHAPES(5))=1)</RuleTest></Rule><Rule ID='46' NameU='NoTargetOrSourceAssociation' Category='Association' Description='An Association must have a source and a target.'><RuleFilter>AND(HASCATEGORY("Connecting Object"),Actions.Association.Checked)</RuleFilter><RuleTest>AND(AGGCOUNT(GLUEDSHAPES(4))=1,AGGCOUNT(GLUEDSHAPES(5))=1)</RuleTest></Rule><Rule ID='47' NameU='SequenceFlowBetweenNonFlowObjects' Category='Sequence Flow' Description='A Data Object, Data Store, Lane, Message, Pool, Text Annotation or Group must not have incoming or outgoing Sequence Flow.'><RuleFilter>OR(HASCATEGORY("Text Annotation"), HASCATEGORY("Data Object"), HASCATEGORY("Group"),HASCATEGORY("Swimlane"), HASCATEGORY("Pool"),HASCATEGORY("Message"),HASCATEGORY("Data Store"))</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(0),"Actions.SequenceFlow.Checked"))=0</RuleTest></Rule><Rule ID='48' NameU='ImproperMessageFlowConnection' Category='Message Flow' Description='A Gateway, Data Object, Data Store, Lane, Text Annotation or Group must not have incoming or outgoing Message Flow.'><RuleFilter>OR(HASCATEGORY("Gateway"), HASCATEGORY("Text Annotation"), HASCATEGORY("Data Object"), HASCATEGORY("Group"),HASCATEGORY("Swimlane"),HASCATEGORY("Data Store"))</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(0), "Actions.MessageFlow.Checked"))=0</RuleTest></Rule><Rule ID='49' NameU='MessageFlowToStartEvent' Category='Start Events' Description='A Start Event with incoming Message Flow must have the Message or Multiple Trigger/Result.'><RuleFilter>AND(HASCATEGORY("Event"),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked))</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.MessageFlow.Checked"))&gt; 0,OR(Actions.Message.Checked, Actions.Multiple.Checked), TRUE)</RuleTest></Rule><Rule ID='50' NameU='MessageFlowFromStartEvent' Category='Start Events' Description='A Start Event must not have outgoing Message Flow.'><RuleFilter>AND(HASCATEGORY("Event"),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked))</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(2), "Actions.MessageFlow.Checked"))=0</RuleTest></Rule><Rule ID='51' NameU='MessageFlowToIntermediateEvent' Category='Intermediate Events' Description='An Intermediate Event with incoming Message Flow must have the Message or Multiple Trigger/Result.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Intermediate.Checked)</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.MessageFlow.Checked"))&gt; 0,OR(Actions.Message.Checked, Actions.Multiple.Checked), TRUE)</RuleTest></Rule><Rule ID='52' NameU='MessageFlowFromIntermediateEvent' Category='Intermediate Events' Description='An Intermediate Event must not have outgoing Message Flow.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Intermediate.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(2),"Actions.MessageFlow.Checked"))=0</RuleTest></Rule><Rule ID='53' NameU='MessageFlowToIntermediateThrowingEvent' Category='Intermediate Events' Description='An Intermediate (Throwing) Event must not have incoming Message Flow.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.IntermediateThrowing.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.MessageFlow.Checked"))=0</RuleTest></Rule><Rule ID='54' NameU='MessageFlowFromIntermediateThrowingEvent' Category='Intermediate Events' Description='An Intermediate (Throwing) Event with outgoing Message Flow must have the Message or Multiple Trigger/Result.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.IntermediateThrowing.Checked)</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(2),"Actions.MessageFlow.Checked"))&gt; 0,OR(Actions.Message.Checked, Actions.Multiple.Checked), TRUE)</RuleTest></Rule><Rule ID='55' NameU='MessageFlowToEndEvent' Category='End Events' Description='An End Event must not have incoming Message Flow.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.End.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.MessageFlow.Checked"))=0</RuleTest></Rule><Rule ID='56' NameU='MessageFlowFromEndEvent' Category='End Events' Description='An End Event with outgoing Message Flow must have the Message or Multiple Trigger/Result.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.End.Checked)</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(2),"Actions.MessageFlow.Checked"))&gt; 0,OR(Actions.Message.Checked, Actions.Multiple.Checked), TRUE)</RuleTest></Rule><Rule ID='57' NameU='TooManyIncomingMessageFlows' Category='Start Events' Description='A Start Event with more than one incoming Message Flow must have the Multiple Trigger/Result.'><RuleFilter>AND(HASCATEGORY("Event"),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked))</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.MessageFlow.Checked"))&gt;1,Actions.Multiple.Checked, TRUE)</RuleTest></Rule><Rule ID='58' NameU='IntermediateThrowingOnBoundary' Category='Intermediate Events' Description='An Intermediate (Throwing) Event must not be attached to the boundary of an Activity.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.IntermediateThrowing.Checked)</RuleFilter><RuleTest>AND(AGGCOUNT(FILTERSET(OnBoundaryOf(),"HASCATEGORY(""Expanded Sub-Process"")")) = 0, AGGCOUNT(FILTERSET(GLUEDSHAPES(5), "OR(HASCATEGORY(""Task""),HASCATEGORY(""Collapsed Sub-Process""))"))=0)</RuleTest></Rule><Rule ID='59' NameU='IntermediateErrorOnBoundary' Category='Intermediate Events' Description='An Intermediate Error Event must be attached to the boundary of an Activity.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Intermediate.Checked, Actions.Error.Checked)</RuleFilter><RuleTest>OR(AGGCOUNT(FILTERSET(OnBoundaryOf(),"HASCATEGORY(""Expanded Sub-Process"")")) &gt; 0, AGGCOUNT(FILTERSET(GLUEDSHAPES(5), "OR(HASCATEGORY(""Task""),HASCATEGORY(""Collapsed Sub-Process""))"))&gt;0)</RuleTest></Rule><Rule ID='60' NameU='ImproperConditionalSequenceFlow' Category='Events' Description='An Event must not have outgoing Conditional Sequence Flow.'><RuleFilter>HASCATEGORY("Event")</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(2),"AND(Actions.SequenceFlow.Checked, Actions.ConditionExpression.Checked)")) = 0</RuleTest></Rule><Rule ID='61' NameU='ImproperConditionalSequenceFlow2' Category='Gateways' Description='A Parallel or Complex Gateway must not have outgoing Conditional Sequence Flow.'><RuleFilter>AND(HASCATEGORY("Gateway"),OR(Actions.Parallel.Checked,Actions.Complex.Checked))</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(2),"AND(Actions.SequenceFlow.Checked, Actions.ConditionExpression.Checked)")) = 0</RuleTest></Rule><Rule ID='62' NameU='SequenceFlowNotConditional' Category='Gateways' Description='Outgoing Sequence Flows from a Gateway must not be conditional.'><RuleFilter>HASCATEGORY("Gateway")</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(2),"AND(Actions.SequenceFlow.Checked, Actions.ConditionExpression.Checked)")) = 0</RuleTest></Rule><Rule ID='63' NameU='EventSubProcessNoSequenceFlows' Category='Sequence Flow, Sub-Process' Description='An Event Sub-Process must not have any incoming or outgoing Sequence Flows.'><RuleFilter>AND(HASCATEGORY("Collapsed Sub-Process"),Actions.BoundaryEvent.Checked)</RuleFilter><RuleTest>AND(AGGCOUNT(FILTERSET(GLUEDSHAPES(2),"Actions.SequenceFlow.Checked")) = 0,AGGCOUNT(FILTERSET(GLUEDSHAPES(1),"Actions.SequenceFlow.Checked")) = 0)</RuleTest></Rule><Rule ID='64' NameU='StartEventTriggerOfEventSubProcess' Category='Start Events' Description='The Start Event trigger of an Event Sub-Process must be from the following types: Message, Error, Escalation, Compensation, Conditional, Signal, or Multiple.'><RuleFilter>AND(HASCATEGORY("Expanded Sub-Process"),Actions.BoundaryEvent.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(CONTAINERMEMBERS(), "AND(HASCATEGORY(""Event""),OR(Actions.Message.Checked,Actions.Error.Checked,Actions.Escalation.Checked,Actions.Compensation.Checked,Actions.Conditional.Checked,Actions.Signal.Checked,Actions.Multiple.Checked))")) = 1</RuleTest></Rule><Rule ID='65' NameU='OneStartEventForEventSubProcess' Category='Start Events' Description='An Event Sub-Process must have one and only one Start Event.'><RuleFilter>AND(HASCATEGORY("Expanded Sub-Process"),Actions.BoundaryEvent.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(CONTAINERMEMBERS(), "AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked))")) = 1</RuleTest></Rule><Rule ID='66' NameU='CompensationStartEventNotForTopLevelProcess' Category='Start Events' Description='A Compensation Start Event may not be used for a top-level Process.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Start.Checked,Actions.Compensation.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"HASCATEGORY(""Expanded Sub-Process"")"))&gt;0</RuleTest></Rule><Rule ID='67' NameU='CompensationAttachedToBoundary' Category='Intermediate Events' Description='A Compensation Intermediate Event must be attached to the boundary of an Activity.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.Intermediate.Checked,Actions.Compensation.Checked)</RuleFilter><RuleTest>OR(AGGCOUNT(FILTERSET(OnBoundaryOf(),"HASCATEGORY(""Expanded Sub-Process"")")) &gt; 0, AGGCOUNT(FILTERSET(GLUEDSHAPES(5), "OR(HASCATEGORY(""Task""),HASCATEGORY(""Collapsed Sub-Process""))"))&gt;0)</RuleTest></Rule><Rule ID='68' NameU='EventGatewayTwoSequenceFlows' Category='Gateways' Description='An Event Gateway must have two or more outgoing Sequence Flows.'><RuleFilter>AND(HASCATEGORY("Gateway"),OR(Actions.ExclusiveEvent.Checked,Actions.ExclusiveInstantiate.Checked,Actions.ParallelInstantiate.Checked))</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(GLUEDSHAPES(2),"Actions.SequenceFlow.Checked")) &gt; 1</RuleTest></Rule><Rule ID='69' NameU='EventGatewayReceiveTasks' Category='Gateways' Description='Receive Tasks used in an Event Gateway configuration must not have any Intermediate Events attached to their boundaries.'><RuleFilter>AND(HASCATEGORY("Task"),Actions.Receive.Checked)</RuleFilter><RuleTest>IF(AGGCOUNT(FILTERSET(CONNECTEDSHAPES(1),"OR(Actions.ExclusiveEvent.Checked,Actions.ExclusiveInstantiate.Checked,Actions.ParallelInstantiate.Checked)"))&gt;0,AGGCOUNT(FILTERSET(GLUEDSHAPES(3),"Actions.Intermediate.Checked"))=0,True)</RuleTest></Rule><Rule ID='70' NameU='TaskBpmn12NotValid' Category='Tasks' Description='This BPMN 1.2 Task shape is no longer valid in BPMN 2.0 and should be replaced with a BPMN 2.0 Task.'><RuleFilter>AND(HASCATEGORY("Task"),User.visVersion &lt; 15)</RuleFilter><RuleTest>False</RuleTest></Rule><Rule ID='71' NameU='EventGatewayMessageIntermediateEvents' Category='Gateways' Description='If Message Intermediate Events are used in an Event-Based Gateway configuration, then Receive Tasks must not be used in that configuration.'><RuleFilter>AND(HASCATEGORY("Gateway"),OR(Actions.ExclusiveEvent.Checked,Actions.ExclusiveInstantiate.Checked,Actions.ParallelInstantiate.Checked))</RuleFilter><RuleTest>OR(AGGCOUNT(FILTERSET(CONNECTEDSHAPES(2),"AND(Actions.Intermediate.Checked,Actions.Message.Checked)"))=0,AGGCOUNT(FILTERSET(CONNECTEDSHAPES(2),"AND(HASCATEGORY(""Task""),Actions.Receive.Checked)"))=0)</RuleTest></Rule><Rule ID='72' NameU='FlowToFromMessages' Category='Messages' Description='A Message must be connected to an Association or a Message Flow. It cannot be connected to a Message Flow endpoint.'><RuleFilter>HASCATEGORY("Message")</RuleFilter><RuleTest>AND(AGGCOUNT(GLUEDSHAPES(0)) &gt;0, AGGCOUNT(GLUEDSHAPES(3)) = 0,AGGCOUNT(FILTERSET(GLUEDSHAPES(0),"NOT(AND(HASCATEGORY(""Connecting Object""),OR(""Actions.MessageFlow.Checked"",""Actions.Association.Checked"")))")) = 0,AGGCOUNT(FILTERSET(ENDPOINTSHAPES(0),"Actions.MessageFlow.Checked")) = 0)</RuleTest></Rule><Rule ID='73' NameU='AdHocRequirements' Category='Sub-Process' Description='An Ad-Hoc Sub-Process must contain a Task.'><RuleFilter>AND(HASCATEGORY("Expanded Sub-Process"),Actions.AdHoc.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(ContainerMembers(),"HASCATEGORY(""Task"")"))&gt;0</RuleTest></Rule><Rule ID='74' NameU='AdHocLimitations' Category='Sub-Process' Description='An Ad-Hoc Sub-Process cannot contain Start or End Events.'><RuleFilter>AND(HASCATEGORY("Expanded Sub-Process"),Actions.AdHoc.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(ContainerMembers(),"AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked,Actions.End.Checked))"))=0</RuleTest></Rule><Rule ID='75' NameU='StartEventsInSubProcesses' Category='Sub-Process' Description='A Start Event used for a Sub-Process must have the None Trigger/Result.'><RuleFilter>AND(HASCATEGORY("Expanded Sub-Process"),Actions.BoundaryDefault.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(ContainerMembers(),"AND(AND(HASCATEGORY(""Event""),OR(Actions.Start.Checked,Actions.StartNonInterrupting.Checked)),NOT(Actions.NoTriggerResult.Checked))"))=0</RuleTest></Rule><Rule ID='76' NameU='NoninterruptingStartEvents' Category='Start Events' Description='A Non-Interrupting Start Event must be used with an Event Sub-Process.'><RuleFilter>AND(HASCATEGORY("Event"),Actions.StartNonInterrupting.Checked)</RuleFilter><RuleTest>AGGCOUNT(FILTERSET(PARENTCONTAINERS(),"AND(HASCATEGORY(""Expanded Sub-Process""),Actions.BoundaryEvent.Checked)"))&gt;0</RuleTest></Rule></RuleSet></RuleSets><Issues/></Validation>